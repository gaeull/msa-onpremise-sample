server:
  port: 8082

spring:
  application:
    name: order-service
  config:
    # import: optional:configserver:http://localhost:8888
    import: optional:configserver:http://config-server:8888

  cloud:
    openfeign:
      circuitbreaker:
        enabled: true # 해당 설정이 있어야 fallback이 동작함.

  kafka:
    # bootstrap-servers: localhost:9094
    bootstrap-servers: kafka:9094
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true
    path: /swagger-ui.html

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      # defaultZone: http://localhost:8761/eureka
      defaultZone: http://discovery-server:8761/eureka
  instance:
    # hostname: localhost
    hostname: order-service
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${server.port}

resilience4j:
  circuitbreaker:
    instances:
      productClient:  # 반드시 @FeignClient 의 name과 일치
        registerHealthIndicator: true  # actuator에 노출
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 10  # 10개의 요청 기준
        minimumNumberOfCalls: 5  # 최소 요청 수 도달해야 상태 평가 시작
        failureRateThreshold: 50  # 50% 이상 실패 시 OPEN 상태로 전환
        waitDurationInOpenState: 5s  # OPEN → HALF_OPEN 대기 시간
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        recordExceptions:
          - java.io.IOException
          - java.util.concurrent.TimeoutException
        #ignoreExceptions:
        #  - com.example.common.exception.CustomValidationException

management:
  tracing:
    sampling:
      probability: 1.0 # 모든 요청에 traceId 부여
  zipkin:
    tracing:
      # endpoint: http://localhost:9411/api/v2/spans
      endpoint: http://zipkin:9411/api/v2/spans
  endpoints:
    web:
      exposure:
        include: '*'